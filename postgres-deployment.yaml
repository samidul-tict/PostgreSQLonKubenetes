apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:12-alpine
          imagePullPolicy: "IfNotPresent"
          command: ["/bin/bash"]
          args: ["-c", "while true; do echo 'host all all all trust' >> /var/lib/postgresql/data/pg_hba.conf; sleep 50; done"]
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: app-database-auth
                  key: username
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: app-database-auth
                  key: password
          envFrom:
            - configMapRef:
                name: postgres-config
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              subPath: postgres
              name: postgredb
            - mountPath: /etc/config/postgresql/config
              name: postgres-config
              readOnly: true
            - mountPath: /etc/authentication/postgresql/secret
              name: postgres-secret
              readOnly: true
      volumes:
        - name: postgredb
          persistentVolumeClaim:
            claimName: postgres-pv-claim
        - name: postgres-config
          configMap:
            name: postgres-config
        - name: postgres-secret
          secret:
            secretName: app-database-auth
